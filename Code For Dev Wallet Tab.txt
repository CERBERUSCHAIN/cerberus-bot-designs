import React, { useState } from 'react';
import { 
  Database, RefreshCw, Copy, ExternalLink, 
  ArrowUpDown, Wallet, Trash2, PlusCircle, 
  Check, AlertTriangle, DollarSign, Shield,
  Zap, Send, Clock, FileText, Search, Eye
} from 'lucide-react';

const DevWalletTab = () => {
  const [activeSection, setActiveSection] = useState('overview');
  const [searchQuery, setSearchQuery] = useState('');
  
  // Sample tokens data for dev wallet
  const tokens = [
    { 
      name: 'CERBERUS', 
      symbol: 'CBRS', 
      balance: '150,000',
      value: '0.1875 SOL',
      price: '$0.000125',
      change: '+5.2%',
      isPositive: true
    },
    { 
      name: 'Jupiter', 
      symbol: 'JUP', 
      balance: '1.5',
      value: '0.023 SOL',
      price: '$7.89',
      change: '-1.4%',
      isPositive: false
    },
    { 
      name: 'Bonk', 
      symbol: 'BONK', 
      balance: '8,000,000',
      value: '0.032 SOL',
      price: '$0.00003',
      change: '+6.2%',
      isPositive: true
    }
  ];
  
  // Sample transaction history
  const transactions = [
    {
      type: 'Swap',
      from: 'SOL',
      to: 'CBRS',
      amount: '0.1 SOL → 80,000 CBRS',
      time: '14:32:05',
      status: 'completed'
    },
    {
      type: 'Deploy',
      from: 'Dev Wallet',
      to: 'Contract',
      amount: '0.005 SOL',
      time: '13:45:21',
      status: 'completed'
    },
    {
      type: 'Sell',
      from: 'CBRS',
      to: 'SOL',
      amount: '40,000 CBRS → 0.05 SOL',
      time: '12:30:15',
      status: 'completed'
    },
    {
      type: 'Transfer',
      from: 'Dev Wallet',
      to: 'External Wallet',
      amount: '0.1 SOL',
      time: '11:22:30',
      status: 'completed'
    }
  ];
  
  return (
    <div className="space-y-6">
      <div className="flex items-center justify-between mb-6">
        <h1 className="text-2xl font-bold text-white">Dev Wallet</h1>
        <div className="flex space-x-2">
          <button className="flex items-center px-3 py-1.5 bg-zinc-900 rounded border border-zinc-800 text-zinc-300 text-sm">
            <RefreshCw size={14} className="mr-2" />
            Refresh Balances
          </button>
          <button className="flex items-center px-3 py-1.5 bg-gradient-to-r from-purple-600 to-pink-600 rounded text-white text-sm shadow-[0_0_10px_rgba(168,85,247,0.5)]">
            <Wallet size={14} className="mr-2" />
            Switch Dev Wallet
          </button>
        </div>
      </div>
      
      {/* Wallet Info Panel */}
      <div className="bg-zinc-950 rounded-lg border border-purple-900/30 shadow-[0_0_20px_-5px_rgba(168,85,247,0.25)] overflow-hidden">
        <div className="border-b border-purple-900/30 p-4 flex items-center">
          <div className="flex space-x-2">
            <button 
              className={`px-3 py-1.5 text-sm rounded ${
                activeSection === 'overview' 
                  ? 'bg-gradient-to-r from-purple-600 to-pink-600 text-white shadow-[0_0_10px_rgba(168,85,247,0.5)]' 
                  : 'bg-zinc-900 text-zinc-300 hover:bg-zinc-800'
              }`}
              onClick={() => setActiveSection('overview')}
            >
              Overview
            </button>
            <button 
              className={`px-3 py-1.5 text-sm rounded ${
                activeSection === 'tokens' 
                  ? 'bg-gradient-to-r from-purple-600 to-pink-600 text-white shadow-[0_0_10px_rgba(168,85,247,0.5)]' 
                  : 'bg-zinc-900 text-zinc-300 hover:bg-zinc-800'
              }`}
              onClick={() => setActiveSection('tokens')}
            >
              Tokens
            </button>
            <button 
              className={`px-3 py-1.5 text-sm rounded ${
                activeSection === 'transactions' 
                  ? 'bg-gradient-to-r from-purple-600 to-pink-600 text-white shadow-[0_0_10px_rgba(168,85,247,0.5)]' 
                  : 'bg-zinc-900 text-zinc-300 hover:bg-zinc-800'
              }`}
              onClick={() => setActiveSection('transactions')}
            >
              Transactions
            </button>
            <button 
              className={`px-3 py-1.5 text-sm rounded ${
                activeSection === 'settings' 
                  ? 'bg-gradient-to-r from-purple-600 to-pink-600 text-white shadow-[0_0_10px_rgba(168,85,247,0.5)]' 
                  : 'bg-zinc-900 text-zinc-300 hover:bg-zinc-800'
              }`}
              onClick={() => setActiveSection('settings')}
            >
              Settings
            </button>
          </div>
        </div>
        
        <div className="p-6">
          {activeSection === 'overview' && (
            <div>
              <div className="mb-6 bg-gradient-to-r from-purple-900/20 to-pink-900/10 rounded-lg border border-purple-900/30 p-4">
                <div className="grid grid-cols-2 gap-6">
                  <div>
                    <div className="text-sm text-purple-300 mb-1">Dev Wallet Address</div>
                    <div className="flex">
                      <input
                        type="text"
                        value="6dwZi...Wf7e7"
                        readOnly
                        className="flex-1 bg-zinc-900 border border-purple-900/50 rounded-l px-3 py-2.5 text-white focus:outline-none shadow-[0_0_5px_rgba(168,85,247,0.25)]"
                      />
                      <button className="bg-zinc-800 px-3 py-2.5 rounded-r border border-purple-900/50 border-l-0 text-zinc-400 hover:text-white transition-colors">
                        <Copy size={14} />
                      </button>
                    </div>
                    <div className="mt-4 flex items-center">
                      <div className="h-2 w-2 rounded-full bg-green-500 mr-2"></div>
                      <span className="text-xs text-zinc-400">Status: Active (Developer Mode)</span>
                    </div>
                  </div>
                  
                  <div>
                    <div className="text-sm text-purple-300 mb-1">Dev Wallet Balance</div>
                    <div className="flex justify-between">
                      <div>
                        <div className="text-xl font-bold text-white">0.257 SOL</div>
                        <div className="text-xs text-zinc-400">≈ $39.17 USD</div>
                      </div>
                      <div className="w-12 h-12 rounded-xl bg-gradient-to-r from-purple-600 to-pink-600 flex items-center justify-center shadow-[0_0_15px_rgba(168,85,247,0.5)]">
                        <Database size={24} className="text-white" />
                      </div>
                    </div>
                    <div className="mt-4">
                      <div className="flex space-x-1">
                        <div className="w-full h-1.5 rounded-full bg-zinc-800 overflow-hidden relative">
                          <div className="absolute left-0 top-0 bottom-0 w-3/4 bg-gradient-to-r from-purple-500 to-pink-500 rounded-full"></div>
                        </div>
                      </div>
                      <div className="flex justify-between mt-1">
                        <span className="text-xs text-zinc-500">Used: 0.743 SOL</span>
                        <span className="text-xs text-zinc-500">Limit: 1.0 SOL</span>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              
              <div className="grid grid-cols-3 gap-6 mb-6">
                <TokenStatCard
                  title="Number of Tokens"
                  value="3"
                  icon={<Wallet size={20} />}
                  color="purple"
                />
                <TokenStatCard
                  title="Total Value"
                  value="0.2425 SOL"
                  icon={<DollarSign size={20} />}
                  color="pink"
                  subtext="≈ $36.95 USD"
                />
                <TokenStatCard
                  title="Daily Transactions"
                  value="18"
                  icon={<ArrowUpDown size={20} />}
                  color="blue"
                  subtext="+4 vs yesterday"
                />
              </div>
              
              <div className="grid grid-cols-2 gap-6">
                <div className="bg-zinc-950 rounded-lg border border-purple-900/30 shadow-[0_0_15px_-5px_rgba(168,85,247,0.25)] overflow-hidden">
                  <div className="border-b border-purple-900/30 p-4">
                    <h2 className="text-lg font-medium text-white">Recent Activity</h2>
                  </div>
                  <div className="p-4 space-y-3">
                    {transactions.slice(0, 3).map((tx, i) => (
                      <TransactionItem
                        key={i}
                        type={tx.type}
                        from={tx.from}
                        to={tx.to}
                        amount={tx.amount}
                        time={tx.time}
                        status={tx.status}
                      />
                    ))}
                  </div>
                </div>
                
                <div className="bg-zinc-950 rounded-lg border border-purple-900/30 shadow-[0_0_15px_-5px_rgba(168,85,247,0.25)] overflow-hidden">
                  <div className="border-b border-purple-900/30 p-4">
                    <h2 className="text-lg font-medium text-white">Quick Actions</h2>
                  </div>
                  <div className="p-4 grid grid-cols-2 gap-3">
                    <ActionButton
                      icon={<ArrowUpDown size={16} />}
                      text="Quick Swap"
                      color="from-purple-600 to-pink-600"
                    />
                    <ActionButton
                      icon={<DollarSign size={16} />}
                      text="Sell All Tokens"
                      color="from-blue-600 to-cyan-600"
                    />
                    <ActionButton
                      icon={<Send size={16} />}
                      text="Transfer SOL"
                      color="from-pink-600 to-rose-600"
                    />
                    <ActionButton
                      icon={<Zap size={16} />}
                      text="Deploy Contract"
                      color="from-amber-600 to-yellow-600"
                    />
                  </div>
                </div>
              </div>
            </div>
          )}
          
          {activeSection === 'tokens' && (
            <div>
              <div className="flex justify-between mb-4">
                <div className="relative w-64">
                  <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                    <Search size={16} className="text-zinc-500" />
                  </div>
                  <input
                    type="text"
                    placeholder="Search tokens..."
                    className="w-full bg-zinc-900 border border-zinc-800 rounded-md py-2 pl-10 pr-4 text-white focus:outline-none focus:ring-2 focus:ring-purple-500/50 focus:border-purple-500"
                    value={searchQuery}
                    onChange={(e) => setSearchQuery(e.target.value)}
                  />
                </div>
                <button className="flex items-center px-3 py-1.5 bg-gradient-to-r from-purple-600 to-pink-600 rounded text-white text-sm shadow-[0_0_10px_rgba(168,85,247,0.5)]">
                  <PlusCircle size={14} className="mr-2" />
                  Add New Token
                </button>
              </div>
              
              <div className="bg-zinc-900/50 rounded-lg overflow-hidden">
                <div className="grid grid-cols-5 text-xs text-purple-300 p-3 border-b border-zinc-800/50">
                  <div>Token</div>
                  <div>Balance</div>
                  <div>Value</div>
                  <div>Price</div>
                  <div className="text-right">Actions</div>
                </div>
                
                <div className="divide-y divide-zinc-800/30">
                  {tokens.map((token, i) => (
                    <div key={i} className="grid grid-cols-5 p-3 text-sm">
                      <div className="flex items-center">
                        <div className="w-8 h-8 rounded-full bg-gradient-to-r from-purple-500 to-blue-500 flex items-center justify-center mr-3 shadow-[0_0_5px_rgba(168,85,247,0.5)]">
                          {token.symbol.charAt(0)}
                        </div>
                        <div>
                          <div className="text-white">{token.name}</div>
                          <div className="text-xs text-zinc-400">{token.symbol}</div>
                        </div>
                      </div>
                      <div className="text-white self-center">{token.balance}</div>
                      <div className="text-purple-300 self-center">{token.value}</div>
                      <div className="self-center">
                        <div className="text-white">{token.price}</div>
                        <div className={`text-xs flex items-center ${token.isPositive ? 'text-green-400' : 'text-red-400'}`}>
                          {token.change}
                        </div>
                      </div>
                      <div className="flex justify-end space-x-1 self-center">
                        <button className="p-1.5 rounded bg-gradient-to-r from-blue-600/80 to-cyan-600/80 text-white hover:from-blue-600 hover:to-cyan-600 transition-colors">
                          <DollarSign size={14} />
                        </button>
                        <button className="p-1.5 rounded bg-zinc-800 text-zinc-300 hover:bg-zinc-700">
                          <Send size={14} />
                        </button>
                        <button className="p-1.5 rounded bg-red-900/20 text-red-400 hover:bg-red-900/30">
                          <Trash2 size={14} />
                        </button>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
              
              <div className="mt-6 bg-zinc-900/20 rounded-md p-3 border border-purple-900/30">
                <div className="flex">
                  <AlertTriangle size={16} className="text-purple-400 mt-0.5 mr-2 flex-shrink-0" />
                  <div className="text-xs text-purple-300">
                    Dev wallet tokens are for development and testing purposes only. Use standard wallets for production trading. Tokens can be instantly swapped to SOL or transferred to other wallets.
                  </div>
                </div>
              </div>
            </div>
          )}
          
          {activeSection === 'transactions' && (
            <div>
              <div className="mb-4 flex items-center justify-between">
                <div className="flex space-x-2">
                  <button className="px-3 py-1.5 bg-gradient-to-r from-purple-600 to-pink-600 rounded text-white text-sm shadow-[0_0_10px_rgba(168,85,247,0.5)]">
                    All
                  </button>
                  <button className="px-3 py-1.5 bg-zinc-900 text-zinc-300 text-sm rounded hover:bg-zinc-800">
                    Swaps
                  </button>
                  <button className="px-3 py-1.5 bg-zinc-900 text-zinc-300 text-sm rounded hover:bg-zinc-800">
                    Transfers
                  </button>
                  <button className="px-3 py-1.5 bg-zinc-900 text-zinc-300 text-sm rounded hover:bg-zinc-800">
                    Deploys
                  </button>
                </div>
                <button className="flex items-center px-3 py-1.5 bg-zinc-900 rounded border border-zinc-800 text-zinc-300 text-sm">
                  <FileText size={14} className="mr-2" />
                  Export CSV
                </button>
              </div>
              
              <div className="bg-zinc-900/50 rounded-lg overflow-hidden">
                <div className="grid grid-cols-6 text-xs text-purple-300 p-3 border-b border-zinc-800/50">
                  <div>Type</div>
                  <div>From</div>
                  <div>To</div>
                  <div>Amount</div>
                  <div>Time</div>
                  <div className="text-right">Status</div>
                </div>
                
                <div className="divide-y divide-zinc-800/30">
                  {transactions.map((tx, i) => (
                    <div key={i} className="grid grid-cols-6 p-3 text-sm">
                      <div className="text-white">{tx.type}</div>
                      <div className="text-zinc-300">{tx.from}</div>
                      <div className="text-zinc-300">{tx.to}</div>
                      <div className="text-purple-300">{tx.amount}</div>
                      <div className="text-zinc-400">{tx.time}</div>
                      <div className="text-right">
                        <span className="inline-flex items-center px-2 py-0.5 rounded text-xs bg-green-900/30 text-green-400">
                          <Check size={10} className="mr-1" />
                          Completed
                        </span>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
              
              <div className="mt-4 flex justify-between items-center text-sm">
                <button className="px-3 py-1.5 bg-zinc-900 rounded text-zinc-400 hover:text-white">
                  Previous
                </button>
                <div className="text-zinc-400">Page 1 of 3</div>
                <button className="px-3 py-1.5 bg-zinc-900 rounded text-zinc-400 hover:text-white">
                  Next
                </button>
              </div>
            </div>
          )}
          
          {activeSection === 'settings' && (
            <div>
              <div className="grid grid-cols-2 gap-6 mb-6">
                <div>
                  <label className="block text-sm text-purple-300 mb-2">
                    Developer Mode
                  </label>
                  <div className="flex items-center justify-between bg-zinc-900/50 p-3 rounded-lg border border-purple-900/30">
                    <div>
                      <div className="text-white text-sm">Enable Developer Mode</div>
                      <div className="text-xs text-zinc-400 mt-1">
                        Allows contract deployment and testing features
                      </div>
                    </div>
                    <div className="relative inline-block w-12 align-middle select-none">
                      <input
                        type="checkbox"
                        name="developer-mode"
                        id="developer-mode"
                        className="sr-only"
                        defaultChecked={true}
                      />
                      <div className="block h-6 w-12 rounded-full bg-zinc-700"></div>
                      <div className="absolute left-0.5 top-0.5 h-5 w-5 transform translate-x-6 rounded-full bg-gradient-to-r from-purple-500 to-pink-500 shadow-[0_0_5px_rgba(168,85,247,0.7)] transition-transform duration-200 ease-in-out"></div>
                    </div>
                  </div>
                </div>
                
                <div>
                  <label className="block text-sm text-purple-300 mb-2">
                    Transaction Signing
                  </label>
                  <div className="flex items-center justify-between bg-zinc-900/50 p-3 rounded-lg border border-purple-900/30">
                    <div>
                      <div className="text-white text-sm">Require Confirmation</div>
                      <div className="text-xs text-zinc-400 mt-1">
                        Prompt before signing any transaction
                      </div>
                    </div>
                    <div className="relative inline-block w-12 align-middle select-none">
                      <input
                        type="checkbox"
                        name="require-confirmation"
                        id="require-confirmation"
                        className="sr-only"
                        defaultChecked={true}
                      />
                      <div className="block h-6 w-12 rounded-full bg-zinc-700"></div>
                      <div className="absolute left-0.5 top-0.5 h-5 w-5 transform translate-x-6 rounded-full bg-gradient-to-r from-purple-500 to-pink-500 shadow-[0_0_5px_rgba(168,85,247,0.7)] transition-transform duration-200 ease-in-out"></div>
                    </div>
                  </div>
                </div>
                
                <div>
                  <label className="block text-sm text-purple-300 mb-2">
                    Spending Limit
                  </label>
                  <div className="relative">
                    <input
                      type="text"
                      defaultValue="1.0"
                      className="w-full bg-zinc-900 border border-purple-900/50 rounded px-3 py-2.5 text-white focus:outline-none focus:ring-2 focus:ring-purple-500/50 focus:border-purple-500 shadow-[0_0_5px_rgba(168,85,247,0.25)]"
                    />
                    <div className="absolute right-0 top-0 bottom-0 flex">
                      <button className="px-3 text-zinc-400 border-l border-purple-900/50 flex items-center justify-center hover:text-white">
                        SOL
                      </button>
                    </div>
                  </div>
                  <div className="text-xs text-zinc-500 mt-1">
                    Maximum amount of SOL this wallet can spend per day
                  </div>
                </div>
                
                <div>
                  <label className="block text-sm text-purple-300 mb-2">
                    Private Key Visibility
                  </label>
                  <div className="flex items-center justify-between bg-zinc-900/50 p-3 rounded-lg border border-purple-900/30">
                    <div>
                      <div className="text-white text-sm">Show Private Key</div>
                      <div className="text-xs text-zinc-400 mt-1">
                        Allow viewing of private key in UI
                      </div>
                    </div>
                    <div className="relative inline-block w-12 align-middle select-none">
                      <input
                        type="checkbox"
                        name="show-private-key"
                        id="show-private-key"
                        className="sr-only"
                        defaultChecked={false}
                      />
                      <div className="block h-6 w-12 rounded-full bg-zinc-700"></div>
                      <div className="absolute left-0.5 top-0.5 h-5 w-5 rounded-full bg-zinc-400 transition-transform duration-200 ease-in-out"></div>
                    </div>
                  </div>
                </div>
              </div>
              
              <div className="mb-6">
                <label className="block text-sm text-purple-300 mb-2">
                  Private Key
                </label>
                <div className="relative">
                  <input
                    type="password"
                    value="●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●"
                    readOnly
                    className="w-full bg-zinc-900 border border-purple-900/50 rounded px-3 py-2.5 text-white focus:outline-none focus:ring-2 focus:ring-purple-500/50 focus:border-purple-500 shadow-[0_0_5px_rgba(168,85,247,0.25)]"
                  />
                  <div className="absolute right-0 top-0 bottom-0 flex">
                    <button className="px-3 text-zinc-400 border-l border-purple-900/50 flex items-center justify-center hover:text-white">
                      <Eye size={14} />
                    </button>
                    <button className="px-3 text-zinc-400 border-l border-purple-900/50 flex items-center justify-center hover:text-white">
                      <Copy size={14} />
                    </button>
                  </div>
                </div>
                <div className="text-xs text-red-400 mt-1 flex items-center">
                  <AlertTriangle size={10} className="mr-1" />
                  Never share your private key with anyone
                </div>
              </div>
              
              <div className="grid grid-cols-2 gap-3 mb-6">
                <button className="flex items-center justify-center px-4 py-2 bg-gradient-to-r from-purple-600 to-pink-600 rounded text-white shadow-[0_0_10px_rgba(168,85,247,0.5)] hover:shadow-[0_0_15px_rgba(168,85,247,0.7)] transition-shadow">
                  <Shield size={16} className="mr-2" />
                  Backup Dev Wallet
                </button>
                <button className="flex items-center justify-center px-4 py-2 bg-gradient-to-r from-red-600 to-orange-600 rounded text-white shadow-[0_0_10px_rgba(239,68,68,0.5)] hover:shadow-[0_0_15px_rgba(239,68,68,0.7)] transition-shadow">
                  <Trash2 size={16} className="mr-2" />
                  Reset Dev Wallet
                </button>
              </div>
              
              <div className="mt-6 bg-red-900/20 rounded-md p-3 border border-red-900/30">
                <div className="flex">
                  <AlertTriangle size={16} className="text-red-400 mt-0.5 mr-2 flex-shrink-0" />
                  <div className="text-xs text-red-300">
                    Warning: Dev wallets are for development and testing purposes only. Never store significant funds in a dev wallet. For production use, please use a hardware wallet or other secure solution.
                  </div>
                </div>
              </div>
            </div>
          )}
        </div>
      </div>
      
      {/* Sub-components Grid */}
      <div className="grid grid-cols-3 gap-6">
        {/* Token Usage Chart */}
        <div className="col-span-2 bg-zinc-950 rounded-lg border border-purple-900/30 shadow-[0_0_20px_-5px_rgba(168,85,247,0.25)] overflow-hidden">
          <div className="border-b border-purple-900/30 p-4 flex items-center justify-between">
            <h2 className="text-lg font-medium text-white">Token Usage & Allocation</h2>
            <div className="flex space-x-2">
              <button className="px-2 py-1 text-xs bg-zinc-900 rounded text-zinc-400 hover:text-white">7D</button>
              <button className="px-2 py-1 text-xs bg-zinc-900 rounded text-purple-300">30D</button>
              <button className="px-2 py-1 text-xs bg-zinc-900 rounded text-zinc-400 hover:text-white">All</button>
            </div>
          </div>
          <div className="p-4">
            <div className="grid grid-cols-12 gap-4">
              <div className="col-span-8">
                <div className="h-64 border border-zinc-800/50 bg-black/30 rounded-lg p-4 flex items-center justify-center">
                  <div className="text-zinc-700 text-sm">Token usage chart visualization here</div>
                </div>
              </div>
              <div className="col-span-4">
                <div className="space-y-4">
                  <div className="p-3 bg-zinc-900/50 rounded-lg border border-zinc-800/30">
                    <div className="flex justify-between items-center mb-2">
                      <div className="flex items-center">
                        <div className="w-3 h-3 rounded-full bg-purple-500 mr-2"></div>
                        <div className="text-xs text-white">CBRS</div>
                      </div>
                      <div className="text-xs text-purple-300">60%</div>
                    </div>
                    <div className="w-full h-1.5 bg-zinc-800 rounded-full overflow-hidden">
                      <div className="h-full bg-gradient-to-r from-purple-500 to-purple-600 rounded-full" style={{ width: '60%' }}></div>
                    </div>
                  </div>
                  
                  <div className="p-3 bg-zinc-900/50 rounded-lg border border-zinc-800/30">
                    <div className="flex justify-between items-center mb-2">
                      <div className="flex items-center">
                        <div className="w-3 h-3 rounded-full bg-pink-500 mr-2"></div>
                        <div className="text-xs text-white">BONK</div>
                      </div>
                      <div className="text-xs text-purple-300">30%</div>
                    </div>
                    <div className="w-full h-1.5 bg-zinc-800 rounded-full overflow-hidden">
                      <div className="h-full bg-gradient-to-r from-pink-500 to-pink-600 rounded-full" style={{ width: '30%' }}></div>
                    </div>
                  </div>
                  
                  <div className="p-3 bg-zinc-900/50 rounded-lg border border-zinc-800/30">
                    <div className="flex justify-between items-center mb-2">
                      <div className="flex items-center">
                        <div className="w-3 h-3 rounded-full bg-blue-500 mr-2"></div>
                        <div className="text-xs text-white">JUP</div>
                      </div>
                      <div className="text-xs text-purple-300">10%</div>
                    </div>
                    <div className="w-full h-1.5 bg-zinc-800 rounded-full overflow-hidden">
                      <div className="h-full bg-gradient-to-r from-blue-500 to-blue-600 rounded-full" style={{ width: '10%' }}></div>
                    </div>
                  </div>
                  
                  <div className="mt-4">
                    <button className="w-full px-3 py-2 bg-zinc-900 rounded text-xs text-zinc-300 hover:text-white">
                      View Details
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        
        {/* Dev Tools */}
        <div className="bg-zinc-950 rounded-lg border border-purple-900/30 shadow-[0_0_20px_-5px_rgba(168,85,247,0.25)] overflow-hidden">
          <div className="border-b border-purple-900/30 p-4">
            <h2 className="text-lg font-medium text-white">Developer Tools</h2>
          </div>
          <div className="p-4">
            <div className="space-y-3">
              <button className="w-full flex items-center px-4 py-3 bg-gradient-to-r from-purple-600/90 to-pink-600/90 rounded text-white hover:from-purple-600 hover:to-pink-600 shadow-[0_0_10px_rgba(168,85,247,0.3)] hover:shadow-[0_0_15px_rgba(168,85,247,0.5)] transition-shadow">
                <div className="w-8 h-8 rounded-full bg-white/10 flex items-center justify-center mr-3">
                  <Zap size={16} />
                </div>
                <div className="text-left">
                  <div className="text-sm font-medium">Deploy Contract</div>
                  <div className="text-xs text-white/70">Upload contract code</div>
                </div>
              </button>
              
              <button className="w-full flex items-center px-4 py-3 bg-zinc-900 rounded text-white border border-zinc-800/50 hover:border-purple-900/30 hover:bg-zinc-900/80 transition-colors">
                <div className="w-8 h-8 rounded-full bg-zinc-800 flex items-center justify-center mr-3">
                  <Shield size={16} className="text-blue-400" />
                </div>
                <div className="text-left">
                  <div className="text-sm font-medium">Test Transactions</div>
                  <div className="text-xs text-zinc-400">Simulate before deploying</div>
                </div>
              </button>
              
              <button className="w-full flex items-center px-4 py-3 bg-zinc-900 rounded text-white border border-zinc-800/50 hover:border-purple-900/30 hover:bg-zinc-900/80 transition-colors">
                <div className="w-8 h-8 rounded-full bg-zinc-800 flex items-center justify-center mr-3">
                  <ExternalLink size={16} className="text-pink-400" />
                </div>
                <div className="text-left">
                  <div className="text-sm font-medium">View on Explorer</div>
                  <div className="text-xs text-zinc-400">Blockchain transaction history</div>
                </div>
              </button>
              
              <button className="w-full flex items-center px-4 py-3 bg-zinc-900 rounded text-white border border-zinc-800/50 hover:border-purple-900/30 hover:bg-zinc-900/80 transition-colors">
                <div className="w-8 h-8 rounded-full bg-zinc-800 flex items-center justify-center mr-3">
                  <Send size={16} className="text-purple-400" />
                </div>
                <div className="text-left">
                  <div className="text-sm font-medium">Refund to Main</div>
                  <div className="text-xs text-zinc-400">Return SOL to main wallet</div>
                </div>
              </button>
            </div>
            
            <div className="mt-6 p-3 bg-gradient-to-r from-purple-900/20 to-pink-900/10 rounded-lg border border-purple-900/30">
              <div className="flex items-center">
                <Clock size={16} className="text-purple-400 mr-2" />
                <div className="text-sm text-zinc-300">Dev Session Time</div>
              </div>
              <div className="mt-2 mb-1">
                <div className="text-lg font-mono text-white">02:45:18</div>
              </div>
              <div className="flex justify-between text-xs text-zinc-500">
                <span>Started: 12:15 PM</span>
                <span>Expires: 6:00 PM</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

// Token Stat Card Component
const TokenStatCard = ({ title, value, icon, color, subtext }) => {
  let gradientColors, textColor, borderColor, shadowColor;
  
  switch (color) {
    case 'purple':
      gradientColors = 'from-purple-500 to-fuchsia-500';
      textColor = 'text-purple-300';
      borderColor = 'border-purple-900/30';
      shadowColor = 'rgba(168,85,247,0.25)';
      break;
    case 'pink':
      gradientColors = 'from-pink-500 to-rose-500';
      textColor = 'text-pink-300';
      borderColor = 'border-pink-900/30';
      shadowColor = 'rgba(236,72,153,0.25)';
      break;
    case 'blue':
      gradientColors = 'from-blue-500 to-cyan-500';
      textColor = 'text-blue-300';
      borderColor = 'border-blue-900/30';
      shadowColor = 'rgba(59,130,246,0.25)';
      break;
    case 'cyan':
      gradientColors = 'from-cyan-500 to-blue-500';
      textColor = 'text-cyan-300';
      borderColor = 'border-cyan-900/30';
      shadowColor = 'rgba(6,182,212,0.25)';
      break;
    default:
      gradientColors = 'from-purple-500 to-fuchsia-500';
      textColor = 'text-purple-300';
      borderColor = 'border-purple-900/30';
      shadowColor = 'rgba(168,85,247,0.25)';
  }

  return (
    <div className={`bg-zinc-900/70 rounded-lg border ${borderColor} p-4 shadow-[0_0_15px_-5px_${shadowColor}]`}>
      <div className="flex items-center justify-between mb-2">
        <div className={`${textColor} text-sm`}>{title}</div>
        <div className={`w-8 h-8 rounded-lg bg-gradient-to-r ${gradientColors} flex items-center justify-center shadow-[0_0_10px_rgba(168,85,247,0.3)]`}>
          {icon}
        </div>
      </div>
      <div className="text-xl font-bold text-white">{value}</div>
      {subtext && <div className="text-xs text-zinc-400 mt-1">{subtext}</div>}
    </div>
  );
};

// Transaction Item Component
const TransactionItem = ({ type, from, to, amount, time, status }) => {
  let bgColor, iconColor, icon;
  
  switch (type) {
    case 'Swap':
      bgColor = 'bg-purple-900/20';
      iconColor = 'text-purple-400';
      icon = <ArrowUpDown size={14} />;
      break;
    case 'Deploy':
      bgColor = 'bg-blue-900/20';
      iconColor = 'text-blue-400';
      icon = <Zap size={14} />;
      break;
    case 'Sell':
      bgColor = 'bg-green-900/20';
      iconColor = 'text-green-400';
      icon = <DollarSign size={14} />;
      break;
    case 'Transfer':
      bgColor = 'bg-cyan-900/20';
      iconColor = 'text-cyan-400';
      icon = <Send size={14} />;
      break;
    default:
      bgColor = 'bg-zinc-900/50';
      iconColor = 'text-zinc-400';
      icon = <ArrowUpDown size={14} />;
  }

  return (
    <div className={`p-3 rounded ${bgColor} border border-zinc-800/50`}>
      <div className="flex justify-between">
        <div className="flex items-center">
          <div className={`w-6 h-6 rounded-full bg-zinc-900 flex items-center justify-center mr-2 ${iconColor}`}>
            {icon}
          </div>
          <div>
            <div className="text-sm text-white">{type}</div>
            <div className="text-xs text-zinc-400">{from} → {to}</div>
          </div>
        </div>
        <div className="text-right">
          <div className="text-sm text-purple-300">{amount}</div>
          <div className="text-xs text-zinc-500">{time}</div>
        </div>
      </div>
    </div>
  );
};

// Action Button Component
const ActionButton = ({ icon, text, color }) => {
  return (
    <button className={`flex items-center justify-center p-3 bg-gradient-to-r ${color} rounded shadow-[0_0_10px_rgba(168,85,247,0.2)] hover:shadow-[0_0_15px_rgba(168,85,247,0.4)] transition-shadow`}>
      <div className="mr-2">{icon}</div>
      <div className="text-sm font-medium">{text}</div>
    </button>
  );
};

export default DevWalletTab;